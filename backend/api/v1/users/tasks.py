# tasks.py
from celery import shared_task
from django.core.mail import send_mail
from django.conf import settings


@shared_task(bind=True, max_retries=3)
def send_activation_email(self, user_id, context):
    try:
        from django.contrib.auth import get_user_model

        User = get_user_model()
        user = User.objects.get(id=user_id)

        print(f"üéØ –ó–∞–¥–∞—á–∞ send_activation_email –∑–∞–ø—É—â–µ–Ω–∞")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email} (ID: {user.id})")
        print(f"üìã –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}")

        subject = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ BookNetwork"

        # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ URL –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        activation_url = context.get("url", "")

        message = f"""
        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.get_full_name() or user.username}!

        –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
        {activation_url}

        –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
        –ö–æ–º–∞–Ω–¥–∞ BookNetwork!
        """

        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –Ω–∞: {user.email}")
        print(f"üìù –¢–µ–º–∞: {subject}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {activation_url}")

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
        print(f"üìß FROM: {settings.DEFAULT_FROM_EMAIL}")
        print(f"ÔøΩÔ∏è EMAIL_HOST: {settings.EMAIL_HOST}")
        print(f"üîå EMAIL_PORT: {settings.EMAIL_PORT}")

        send_mail(
            subject=subject,
            message=message,
            from_email=settings.DEFAULT_FROM_EMAIL,
            recipient_list=[user.email],
            fail_silently=False,
        )

        print(f"‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {user.email}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")
        import traceback

        traceback.print_exc()
        raise self.retry(countdown=60)
