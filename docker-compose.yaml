services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

  backend:
    build: ./booknetwork
    container_name: backend
    restart: always
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./booknetwork:/app
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0

  worker:
    build: ./booknetwork
    container_name: worker
    command: celery -A booknetwork worker --loglevel=info
    volumes:
      - ./booknetwork:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}

  flower:
    build: ./booknetwork
    container_name: flower
    command: celery -A booknetwork flower --port=5555
    volumes:
      - ./booknetwork:/app
    working_dir: /app
    env_file:
      # ДОБАВЬТЕ ЭТО!
      - .env
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}

  frontend:
    build: ./booknetwork_frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - VUE_APP_API_BASE_URL=http://localhost:8000/api/v1
      - VUE_APP_FRONTEND_URL=http://localhost:3000
    depends_on:
      - backend

volumes:
  postgres-data:
  redis-data:
